[
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/657",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/657/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/657/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/657/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/657",
        "id": 337676729,
        "node_id": "MDU6SXNzdWUzMzc2NzY3Mjk=",
        "number": 657,
        "title": "Whitelist for nofollow rule?",
        "user": {
            "login": "abrambailey",
            "id": 978462,
            "node_id": "MDQ6VXNlcjk3ODQ2Mg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/978462?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abrambailey",
            "html_url": "https://github.com/abrambailey",
            "followers_url": "https://api.github.com/users/abrambailey/followers",
            "following_url": "https://api.github.com/users/abrambailey/following{/other_user}",
            "gists_url": "https://api.github.com/users/abrambailey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abrambailey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abrambailey/subscriptions",
            "organizations_url": "https://api.github.com/users/abrambailey/orgs",
            "repos_url": "https://api.github.com/users/abrambailey/repos",
            "events_url": "https://api.github.com/users/abrambailey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abrambailey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-07-02T21:52:44Z",
        "updated_at": "2018-07-02T21:52:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Is it possible to whitelist my own domain from the nofollow rule as seen here https://github.com/vmg/redcarpet/issues/69"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/655",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/655/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/655/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/655/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/655",
        "id": 310228744,
        "node_id": "MDU6SXNzdWUzMTAyMjg3NDQ=",
        "number": 655,
        "title": "Unordered list item interpreted as order list item",
        "user": {
            "login": "marius-balteanu",
            "id": 5037739,
            "node_id": "MDQ6VXNlcjUwMzc3Mzk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5037739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marius-balteanu",
            "html_url": "https://github.com/marius-balteanu",
            "followers_url": "https://api.github.com/users/marius-balteanu/followers",
            "following_url": "https://api.github.com/users/marius-balteanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/marius-balteanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marius-balteanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marius-balteanu/subscriptions",
            "organizations_url": "https://api.github.com/users/marius-balteanu/orgs",
            "repos_url": "https://api.github.com/users/marius-balteanu/repos",
            "events_url": "https://api.github.com/users/marius-balteanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marius-balteanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 34906437,
                "node_id": "MDU6TGFiZWwzNDkwNjQzNw==",
                "url": "https://api.github.com/repos/vmg/redcarpet/labels/bug",
                "name": "bug",
                "color": "f7c6c7",
                "default": true
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-31T09:56:42Z",
        "updated_at": "2018-04-09T21:03:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "This issue was found during the investigations made for http://www.redmine.org/issues/21181\r\n\r\nThe following syntax:\r\n```\r\n1.  this is a list item with two child items.\r\n    -  first child\r\n    -  second child\r\n1.   another item in the same list.\r\n-  text wrongly interpreted as ordered list item\r\n\r\n1. last item of the ordered list\r\n```\r\n\r\ngenerates:\r\n![image](https://user-images.githubusercontent.com/5037739/38161996-b399747a-34e1-11e8-81d7-8808f0273a39.png)\r\n\r\nI'm not sure which is the expected behaviour (if the last item of the ordered list should be really the last item or should be the first item from a new ordered list), but I'm almost sure that the list item \"text wrongly interpreted as ordered list item\" should not be interpreted as ordered list."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/652",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/652/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/652/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/652/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/652",
        "id": 302819838,
        "node_id": "MDU6SXNzdWUzMDI4MTk4Mzg=",
        "number": 652,
        "title": "Incorrect parsing un-indented HTML fragment",
        "user": {
            "login": "wjordan",
            "id": 56541,
            "node_id": "MDQ6VXNlcjU2NTQx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/56541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wjordan",
            "html_url": "https://github.com/wjordan",
            "followers_url": "https://api.github.com/users/wjordan/followers",
            "following_url": "https://api.github.com/users/wjordan/following{/other_user}",
            "gists_url": "https://api.github.com/users/wjordan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wjordan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wjordan/subscriptions",
            "organizations_url": "https://api.github.com/users/wjordan/orgs",
            "repos_url": "https://api.github.com/users/wjordan/repos",
            "events_url": "https://api.github.com/users/wjordan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wjordan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-06T18:44:29Z",
        "updated_at": "2018-03-06T18:44:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I came across an issue parsing an un-indented HTML fragment, where the parser seems to be incorrectly treating part of the HTML as a block of paragraph-text (wrapped in a `<p>` tag and quote-escaped). Here's a minimal-repro test case where the issue should be self-explanatory:\r\n\r\n```\r\n$ ruby -rredcarpet -e \"puts Redcarpet::Markdown.new(Redcarpet::Render::HTML).render(ARGF.read)\" <<MD\r\n<div>\r\n<div>\r\n</div>\r\n</div>\r\n<script>\r\n  x = \"hello\";\r\n</script>\r\nMD\r\n<div>\r\n<div>\r\n</div>\r\n\r\n<p></div>\r\n<script>\r\n  x = &quot;hello&quot;;\r\n</script></p>\r\n```\r\n\r\nCompare against:\r\n- [`commonmarker`](https://github.com/gjtorikian/commonmarker):\r\n```\r\n$ ruby -rcommonmarker -e \"puts CommonMarker.render_html(ARGF.read)\" <<MD\r\n<div>\r\n<div>\r\n</div>\r\n</div>\r\n<script>\r\n  x = \"hello\";\r\n</script>\r\nMD\r\n<div>\r\n<div>\r\n</div>\r\n</div>\r\n<script>\r\n  x = \"hello\";\r\n</script>\r\n```\r\n\r\n- [`kramdown`](https://github.com/gettalong/kramdown):\r\n```\r\n$ ruby -rkramdown -e \"puts Kramdown::Document.new(ARGF.read).to_html\" <<MD\r\n<div>\r\n<div>\r\n</div>\r\n</div>\r\n<script>\r\n  x = \"hello\";\r\n</script>\r\nMD\r\n<div>\r\n<div>\r\n</div>\r\n</div>\r\n<script>\r\n  x = \"hello\";\r\n</script>\r\n```\r\n\r\n- [`bluecloth`](https://github.com/ged/bluecloth):\r\n```\r\n$ ruby -rbluecloth -e \"puts BlueCloth.new(ARGF.read).text\" <<MD\r\n<div>\r\n<div>\r\n</div>\r\n</div>\r\n<script>\r\n  x = \"hello\";\r\n</script>\r\nMD\r\n<div>\r\n<div>\r\n</div>\r\n</div>\r\n<script>\r\n  x = \"hello\";\r\n</script>\r\n```"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/648",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/648/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/648/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/648/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/648",
        "id": 296031417,
        "node_id": "MDU6SXNzdWUyOTYwMzE0MTc=",
        "number": 648,
        "title": "Email addresses containing underscore and surrounded by <> are filtered out when filter_html is enabled",
        "user": {
            "login": "marius-balteanu",
            "id": 5037739,
            "node_id": "MDQ6VXNlcjUwMzc3Mzk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5037739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marius-balteanu",
            "html_url": "https://github.com/marius-balteanu",
            "followers_url": "https://api.github.com/users/marius-balteanu/followers",
            "following_url": "https://api.github.com/users/marius-balteanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/marius-balteanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marius-balteanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marius-balteanu/subscriptions",
            "organizations_url": "https://api.github.com/users/marius-balteanu/orgs",
            "repos_url": "https://api.github.com/users/marius-balteanu/repos",
            "events_url": "https://api.github.com/users/marius-balteanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marius-balteanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-02-09T22:25:49Z",
        "updated_at": "2018-02-09T22:26:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "A Redmine user reported that [Markdown doesn't recognize some email addresses](http://www.redmine.org/issues/23019). \r\n\r\nI've added two test cases to illustrate the reported problem. Unfortunately, I don't have the required skills to fix the issue. \r\n\r\n```ruby\r\n  def test_filter_html_doesnt_filter_email_addresses_surrounded_by_tags\r\n    markdown = \"<abc@example.org>\"\r\n    output   = render(markdown, with: [:filter_html, :autolink])\r\n\r\n    assert_equal \"<p><a href=\\\"mailto:abc@example.org\\\">abc@example.org</a></p>\", output\r\n  end\r\n```\r\n```ruby\r\n  def test_filter_html_doesnt_filter_email_addresses_surrounded_by_tags_and_containing_underscore\r\n    markdown = \"<a_bc@example.org>\"\r\n    output   = render(markdown, with: [:filter_html, :no_intra_emphasis, :autolink])\r\n\r\n    assert_equal \"<p><a href=\\\"mailto:a_bc@example.org\\\">a_bc@example.org</a></p>\", output\r\n  end\r\n```\r\nThe second test fails because <a_bc@example.org> is considered somehow an HTML tag and it is filtered out.\r\n\r\n```\r\n/vagrant/redcarpet/test/html_render_test.rb:54:in `test_filter_html_doesnt_filter_email_addresses_surrounded_by_tags_and_containing_underscore'\r\n     51:     markdown = \"<a_bc@example.org>\"\r\n     52:     output   = render(markdown, with: [:filter_html, :no_intra_emphasis, :autolink])\r\n     53: \r\n  => 54:     assert_equal \"<p><a href=\\\"mailto:a_bc@example.org\\\">a_bc@example.org</a></p>\", output\r\n     55:   end\r\n     56: \r\n     57:   def test_that_no_image_flag_works\r\n<\"<p><a href=\\\"mailto:a_bc@example.org\\\">a_bc@example.org</a></p>\"> expected but was\r\n<\"\">\r\nFailure: test_filter_html_doesnt_filter_email_addresses_surrounded_by_tags_and_containing_underscore(HTMLRenderTest)\r\n..........................\r\nFinished in 0.30313018 seconds.\r\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n131 tests, 190 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\r\n99.2366% passed\r\n```"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/644",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/644/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/644/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/644/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/644",
        "id": 287640090,
        "node_id": "MDU6SXNzdWUyODc2NDAwOTA=",
        "number": 644,
        "title": "Failed to install gem in Ubuntu 16.04 and Ruby 2.4+",
        "user": {
            "login": "sqsy",
            "id": 6390284,
            "node_id": "MDQ6VXNlcjYzOTAyODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6390284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sqsy",
            "html_url": "https://github.com/sqsy",
            "followers_url": "https://api.github.com/users/sqsy/followers",
            "following_url": "https://api.github.com/users/sqsy/following{/other_user}",
            "gists_url": "https://api.github.com/users/sqsy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sqsy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sqsy/subscriptions",
            "organizations_url": "https://api.github.com/users/sqsy/orgs",
            "repos_url": "https://api.github.com/users/sqsy/repos",
            "events_url": "https://api.github.com/users/sqsy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sqsy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-01-11T02:06:14Z",
        "updated_at": "2018-03-20T12:53:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Failed to install gem in Ubuntu 16.04 and Ruby 2.4+.\r\n\r\nI have checked solutions provided in StackOverflow and issues of this git respository.\r\n\r\nTried both system and rbenv ruby 2.4.0, 2.4.3 and 2.5.0, tried different version of redcarpet from 2.2 to 3.4, and installed libgmp-dev, libgmp3-dev and GMP. However, I still got following errors when running 'gem install redcarpet -v '3.4.0', \r\n\r\n(PS: success install gem in Ubuntu 14.04 + Ruby 2.5.0 / Ubuntu Kylin 16.04 + Ruby 2.3.0, but failed in Ubuntu Kylin 16.04 and Ruby 2.4+)\r\n\r\n```bash\r\nBuilding native extensions. This could take a while...\r\nERROR:  Error installing redcarpet:\r\n    ERROR: Failed to build gem native extension.\r\n\r\n    current directory: /home/kevin/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/redcarpet-3.4.0/ext/redcarpet\r\n/home/kevin/.rbenv/versions/2.4.3/bin/ruby -r ./siteconf20180111-24116-8kyrcv.rb extconf.rb\r\ncreating Makefile\r\n\r\ncurrent directory: /home/kevin/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/redcarpet-3.4.0/ext/redcarpet\r\nmake \"DESTDIR=\" clean\r\n\r\ncurrent directory: /home/kevin/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/redcarpet-3.4.0/ext/redcarpet\r\nmake \"DESTDIR=\"\r\ncompiling autolink.c\r\ncompiling buffer.c\r\nbuffer.c: In function ‘bufcstr’:\r\nbuffer.c:111:45: warning: passing argument 1 of ‘bufgrow’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n  if (buf->size + 1 <= buf->asize || bufgrow(buf, buf->size + 1) == BUF_OK) {\r\n                                             ^\r\nbuffer.c:60:1: note: expected ‘struct buf *’ but argument is of type ‘const struct buf *’\r\n bufgrow(struct buf *buf, size_t neosz)\r\n ^\r\nbuffer.c: At top level:\r\ncc1: warning: unrecognized command line option ‘-Wno-self-assign’\r\ncc1: warning: unrecognized command line option ‘-Wno-constant-logical-operand’\r\ncc1: warning: unrecognized command line option ‘-Wno-parentheses-equality’\r\ncc1: warning: unrecognized command line option ‘-Wno-tautological-compare’\r\ncompiling houdini_href_e.c\r\ncompiling houdini_html_e.c\r\ncompiling html.c\r\ncompiling html_smartypants.c\r\nhtml_smartypants.c: In function ‘squote_len’:\r\nhtml_smartypants.c:104:39: warning: initialization discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n  static char* single_quote_list[] = { \"'\", \"&#39;\", \"&#x27;\", \"&apos;\", NULL };\r\n                                       ^\r\nhtml_smartypants.c:104:44: warning: initialization discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n  static char* single_quote_list[] = { \"'\", \"&#39;\", \"&#x27;\", \"&apos;\", NULL };\r\n                                            ^\r\nhtml_smartypants.c:104:53: warning: initialization discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n  static char* single_quote_list[] = { \"'\", \"&#39;\", \"&#x27;\", \"&apos;\", NULL };\r\n                                                     ^\r\nhtml_smartypants.c:104:63: warning: initialization discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n  static char* single_quote_list[] = { \"'\", \"&#39;\", \"&#x27;\", \"&apos;\", NULL };\r\n                                                               ^\r\nhtml_smartypants.c: In function ‘smartypants_squote’:\r\nhtml_smartypants.c:149:30: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n    uint8_t next_char = (size > 1+next_squote_len) ? text[1+next_squote_len] : 0;\r\n                              ^\r\nhtml_smartypants.c: In function ‘smartypants_cb__amp’:\r\nhtml_smartypants.c:250:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]\r\n  int len = squote_len(text, size);\r\n  ^\r\nhtml_smartypants.c: At top level:\r\ncc1: warning: unrecognized command line option ‘-Wno-self-assign’\r\ncc1: warning: unrecognized command line option ‘-Wno-constant-logical-operand’\r\ncc1: warning: unrecognized command line option ‘-Wno-parentheses-equality’\r\ncc1: warning: unrecognized command line option ‘-Wno-tautological-compare’\r\ncompiling markdown.c\r\nmarkdown.c: In function ‘char_link’:\r\nmarkdown.c:1045:3: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]\r\n   struct buf id = { 0, 0, 0, 0 };\r\n   ^\r\nmarkdown.c:1085:3: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]\r\n   size_t nb_p = 0;\r\n   ^\r\nmarkdown.c: In function ‘sd_markdown_render’:\r\nmarkdown.c:2818:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]\r\n  int footnotes_enabled  = md->ext_flags & MKDEXT_FOOTNOTES;\r\n  ^\r\nmarkdown.c:2836:43: warning: passing argument 1 of ‘is_codefence’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n   if (codefences_enabled && (is_codefence(document + beg, doc_size - beg, NULL) != 0))\r\n                                           ^\r\nmarkdown.c:1389:1: note: expected ‘uint8_t * {aka unsigned char *}’ but argument is of type ‘const uint8_t * {aka const unsigned char *}’\r\n is_codefence(uint8_t *data, size_t size, struct buf *syntax)\r\n ^\r\nmarkdown.c: At top level:\r\nmarkdown.c:94:15: warning: ‘char_underline’ declared ‘static’ but never defined [-Wunused-function]\r\n static size_t char_underline(struct buf *ob, struct sd_markdown *rndr, uint8_t *data, size_t offset, size_t size);\r\n               ^\r\ncc1: warning: unrecognized command line option ‘-Wno-self-assign’\r\ncc1: warning: unrecognized command line option ‘-Wno-constant-logical-operand’\r\ncc1: warning: unrecognized command line option ‘-Wno-parentheses-equality’\r\ncc1: warning: unrecognized command line option ‘-Wno-tautological-compare’\r\ncompiling rc_markdown.c\r\nrc_markdown.c: In function ‘rb_redcarpet_md_render’:\r\nrc_markdown.c:138:2: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]\r\n  struct rb_redcarpet_rndr *renderer;\r\n  ^\r\nrc_markdown.c: At top level:\r\ncc1: warning: unrecognized command line option ‘-Wno-self-assign’\r\ncc1: warning: unrecognized command line option ‘-Wno-constant-logical-operand’\r\ncc1: warning: unrecognized command line option ‘-Wno-parentheses-equality’\r\ncc1: warning: unrecognized command line option ‘-Wno-tautological-compare’\r\ncompiling rc_render.c\r\nrc_render.c: In function ‘rndr_link_attributes’:\r\nrc_render.c:287:28: warning: variable ‘rndr’ set but not used [-Wunused-but-set-variable]\r\n  struct rb_redcarpet_rndr *rndr;\r\n                            ^\r\nrc_render.c: At top level:\r\ncc1: warning: unrecognized command line option ‘-Wno-self-assign’\r\ncc1: warning: unrecognized command line option ‘-Wno-constant-logical-operand’\r\ncc1: warning: unrecognized command line option ‘-Wno-parentheses-equality’\r\ncc1: warning: unrecognized command line option ‘-Wno-tautological-compare’\r\ncompiling stack.c\r\nlinking shared-object redcarpet.so\r\nredcarpet.so: last close failure: invalid operation (note: this line is translated from system language to English)\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:257: recipe for target 'redcarpet.so' failed\r\nmake: *** [redcarpet.so] Error 1\r\n\r\nmake failed, exit code 2\r\n\r\nGem files will remain installed in /home/kevin/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/redcarpet-3.4.0 for inspection.\r\nResults logged to /home/kevin/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/extensions/x86_64-linux/2.4.0-static/redcarpet-3.4.0/gem_make.out```"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/638",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/638/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/638/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/638/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/638",
        "id": 279081812,
        "node_id": "MDU6SXNzdWUyNzkwODE4MTI=",
        "number": 638,
        "title": "What's the best way to define your own header method?",
        "user": {
            "login": "jfly",
            "id": 277474,
            "node_id": "MDQ6VXNlcjI3NzQ3NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/277474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jfly",
            "html_url": "https://github.com/jfly",
            "followers_url": "https://api.github.com/users/jfly/followers",
            "following_url": "https://api.github.com/users/jfly/following{/other_user}",
            "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
            "organizations_url": "https://api.github.com/users/jfly/orgs",
            "repos_url": "https://api.github.com/users/jfly/repos",
            "events_url": "https://api.github.com/users/jfly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jfly/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-12-04T17:33:10Z",
        "updated_at": "2018-02-14T19:44:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I followed the instructions [here](https://github.com/vmg/redcarpet#and-you-can-even-cook-your-own) to implement my own header method. I want to generate headers with a pretty anchor link so users can easily link to parts of my markdown document. Something like this:\r\n\r\n![image](https://user-images.githubusercontent.com/277474/33566663-8623d192-d8d5-11e7-8229-4404e034dd1f.png)\r\n\r\n(I'm setting `with_toc_data` to true so I can also generate a table of contents)\r\n\r\nWhen overriding the header method, I need to include an `id` attribute in the generated `<h1>` tag. I want that `id` to match the links that will be generated by `Redcarpet::Render::HTML_TOC`, so I need to hook into the [`rndr_header_anchor`](https://github.com/vmg/redcarpet/blob/f441dec42a5097530328b20e9d5ed1a025c600f7/ext/redcarpet/html.c#L273-L319) (called by the [`rndr_header`](https://github.com/vmg/redcarpet/blob/f441dec42a5097530328b20e9d5ed1a025c600f7/ext/redcarpet/html.c#L322) method which I'm trying to override). I couldn't find any way to call the `rndr_header_anchor` method myself from Ruby, so I've resorted to this hack:\r\n\r\n```ruby\r\n# This is annoying. Redcarpet implements this id generation logic in C, and\r\n# AFAIK doesn't provide any hook for calling this method directly from Ruby.\r\n# See C code here: https://github.com/vmg/redcarpet/blob/f441dec42a5097530328b20e9d5ed1a025c600f7/ext/redcarpet/html.c#L273-L319\r\ndef header_anchor(text)\r\n  Nokogiri::HTML(Redcarpet::Markdown.new(Redcarpet::Render::HTML.new(with_toc_data: true)).render(\"# #{text}\")).css('h1')[0][\"id\"]\r\nend\r\n\r\ndef header(text, header_level)\r\n  if @options[:with_toc_data]\r\n    id = header_anchor(text)\r\n    text = anchorable(text, id)\r\n  end\r\n\r\n  \"<h#{header_level}>#{text}</h#{header_level}>\\n\"\r\nend\r\n```\r\n\r\nIs there a better way to achieve what I'm trying to do here?"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/637",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/637/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/637/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/637/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/637",
        "id": 279079092,
        "node_id": "MDU6SXNzdWUyNzkwNzkwOTI=",
        "number": 637,
        "title": "Table of contents generation doesn't work when there are images in the headers",
        "user": {
            "login": "jfly",
            "id": 277474,
            "node_id": "MDQ6VXNlcjI3NzQ3NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/277474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jfly",
            "html_url": "https://github.com/jfly",
            "followers_url": "https://api.github.com/users/jfly/followers",
            "following_url": "https://api.github.com/users/jfly/following{/other_user}",
            "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
            "organizations_url": "https://api.github.com/users/jfly/orgs",
            "repos_url": "https://api.github.com/users/jfly/repos",
            "events_url": "https://api.github.com/users/jfly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jfly/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-12-04T17:24:53Z",
        "updated_at": "2017-12-04T17:24:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Input markdown:\r\n\r\n```\r\n# some text ![img](https://example.com)\r\n```\r\n\r\nGenerated TOC:\r\n\r\n```\r\nirb(main):003:0> puts Redcarpet::Markdown.new(Redcarpet::Render::HTML_TOC.new(with_toc_data: true)).render(\"# some text ![img](https://example.com)\")\r\n<ul>\r\n<li>\r\n<a href=\"#some-text-img-https-example-com\">some text ![img](https://example.com)</a>\r\n</li>\r\n</ul>\r\n=> nil\r\n```\r\n\r\nGenerated HTML:\r\n\r\n```\r\nirb(main):004:0> puts Redcarpet::Markdown.new(Redcarpet::Render::HTML.new(with_toc_data: true)).render(\"# some text ![img](https://example.com)\")\r\n<h1 id=\"some-text\">some text <img src=\"https://example.com\" alt=\"img\"></h1>\r\n=> nil\r\n```\r\n\r\nAs you can see, the generated HTML has `h1 id=\"some-text\"`, but the generated TOC links to `#some-text-img-https-example-com`.\r\n\r\nI tried this out with links (rather than images), and that seems to work fine. I dug into the relevant C code a bit, and it looks like this works for links because we define a [`toc_link` here](https://github.com/vmg/redcarpet/blob/f441dec42a5097530328b20e9d5ed1a025c600f7/ext/redcarpet/html.c#L765), but we don't define a [`toc_image` here](https://github.com/vmg/redcarpet/blob/f441dec42a5097530328b20e9d5ed1a025c600f7/ext/redcarpet/html.c#L763). We need to actually render the images so `toc_header` receives HTML tags that can be ignored when calling `rndr_header_anchor`.\r\n\r\nIf there's interest, I can try to put together a PR that fixes this."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/633",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/633/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/633/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/633/events",
        "html_url": "https://github.com/vmg/redcarpet/pull/633",
        "id": 273045828,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxOTkzMDMz",
        "number": 633,
        "title": "Use Ruby's `ruby_xmalloc`",
        "user": {
            "login": "javierhonduco",
            "id": 959128,
            "node_id": "MDQ6VXNlcjk1OTEyOA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/959128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javierhonduco",
            "html_url": "https://github.com/javierhonduco",
            "followers_url": "https://api.github.com/users/javierhonduco/followers",
            "following_url": "https://api.github.com/users/javierhonduco/following{/other_user}",
            "gists_url": "https://api.github.com/users/javierhonduco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javierhonduco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javierhonduco/subscriptions",
            "organizations_url": "https://api.github.com/users/javierhonduco/orgs",
            "repos_url": "https://api.github.com/users/javierhonduco/repos",
            "events_url": "https://api.github.com/users/javierhonduco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javierhonduco/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2017-11-10T20:12:44Z",
        "updated_at": "2018-04-08T20:11:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vmg/redcarpet/pulls/633",
            "html_url": "https://github.com/vmg/redcarpet/pull/633",
            "diff_url": "https://github.com/vmg/redcarpet/pull/633.diff",
            "patch_url": "https://github.com/vmg/redcarpet/pull/633.patch"
        },
        "body": "Right now, memory allocations in this library are done via `malloc`, however, we are not checking for `NULL` pointers in all of them, like in: https://github.com/vmg/redcarpet/pull/633#issuecomment-343580107\r\n\r\nIn case `malloc` fails, the received pointer is going to eventually be dereferenced, and this will cause the Ruby process to crash.\r\n\r\nThis PR replaces `malloc` usage by `ruby_xmalloc` (as well as their `free` counterparts), as it checks the allocation result. In case the allocation fails it will raise an error.\r\n\r\nWhat do you think, @robin850? 😄 \r\n\r\ncc/ @dylanahsmith"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/627",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/627/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/627/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/627/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/627",
        "id": 251414504,
        "node_id": "MDU6SXNzdWUyNTE0MTQ1MDQ=",
        "number": 627,
        "title": "Hard wrap does not work inside indented lists",
        "user": {
            "login": "johnnyshields",
            "id": 27655,
            "node_id": "MDQ6VXNlcjI3NjU1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/27655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnnyshields",
            "html_url": "https://github.com/johnnyshields",
            "followers_url": "https://api.github.com/users/johnnyshields/followers",
            "following_url": "https://api.github.com/users/johnnyshields/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnnyshields/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnnyshields/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnnyshields/subscriptions",
            "organizations_url": "https://api.github.com/users/johnnyshields/orgs",
            "repos_url": "https://api.github.com/users/johnnyshields/repos",
            "events_url": "https://api.github.com/users/johnnyshields/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnnyshields/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-08-19T09:53:25Z",
        "updated_at": "2017-08-19T09:53:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Consider this markdown:\r\n\r\n```\r\n1. Parent item\r\n    \r\n    1. Child item\r\n    This should have a line break before it when hard_wrap is on.\r\n```\r\n\r\nEven when `hard_wrap: true` is set, this renders as:\r\n\r\n```\r\n1. Parent item\r\n    \r\n    1. Child item This should have a line break before it when hard_wrap is on.\r\n```"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/623",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/623/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/623/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/623/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/623",
        "id": 245061444,
        "node_id": "MDU6SXNzdWUyNDUwNjE0NDQ=",
        "number": 623,
        "title": "Unintuitive / broken(?) handling of multiple paragraphs and sublists inside a list item",
        "user": {
            "login": "JonasT",
            "id": 1573352,
            "node_id": "MDQ6VXNlcjE1NzMzNTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1573352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JonasT",
            "html_url": "https://github.com/JonasT",
            "followers_url": "https://api.github.com/users/JonasT/followers",
            "following_url": "https://api.github.com/users/JonasT/following{/other_user}",
            "gists_url": "https://api.github.com/users/JonasT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JonasT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JonasT/subscriptions",
            "organizations_url": "https://api.github.com/users/JonasT/orgs",
            "repos_url": "https://api.github.com/users/JonasT/repos",
            "events_url": "https://api.github.com/users/JonasT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JonasT/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-07-24T12:17:33Z",
        "updated_at": "2017-09-11T05:48:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "**Problematic markdown:**\r\nThe following markdown is problematic in redcarpet:\r\n\r\n```\r\n- my paragraph 1\r\n  which has lots of interesting text\r\n\r\n  - sub list item 1\r\n  - sub list item 2\r\n\r\n  my paragraph 2\r\n  which also has lots of text\r\n\r\n- item 2\r\n```\r\n**Expected behavior:**\r\nEverything above \"item 2\" is for a human very obviously part of the entire first list item.\r\nThis is also how GitHub renders it:\r\n\r\n- my paragraph 1\r\n  which has lots of interesting text\r\n\r\n  - sub list item 1\r\n  - sub list item 2\r\n\r\n  my paragraph 2\r\n  which also has lots of text\r\n\r\n- item 2\r\n\r\n**Actual (buggy) behavior:**\r\nHowever, redcarpet in the version used in GitLab gives this result:\r\n\r\n- my paragraph 1\r\n  which has lots of interesting text\r\n\r\n  - sub list item 1\r\n  - sub list item 2\r\n\r\nmy paragraph 2\r\nwhich also has lots of text\r\n\r\n- item 2\r\n\r\n**Summary:**\r\nTherefore, I suggest this behavior is changed because it doesn't make much sense compared to how it appears to a human, and because the notable site GitHub also interprets this in a much more sensible way. This is the GitLab downstream report where I discovered the behavior: https://gitlab.com/gitlab-org/gitlab-ce/issues/35456"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/617",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/617/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/617/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/617/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/617",
        "id": 233126852,
        "node_id": "MDU6SXNzdWUyMzMxMjY4NTI=",
        "number": 617,
        "title": "Withspace in front of lines",
        "user": {
            "login": "Lubmes",
            "id": 9612643,
            "node_id": "MDQ6VXNlcjk2MTI2NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/9612643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lubmes",
            "html_url": "https://github.com/Lubmes",
            "followers_url": "https://api.github.com/users/Lubmes/followers",
            "following_url": "https://api.github.com/users/Lubmes/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lubmes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lubmes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lubmes/subscriptions",
            "organizations_url": "https://api.github.com/users/Lubmes/orgs",
            "repos_url": "https://api.github.com/users/Lubmes/repos",
            "events_url": "https://api.github.com/users/Lubmes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lubmes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-06-02T09:29:44Z",
        "updated_at": "2017-06-04T16:59:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I am making a poetry website and some poems start with whitespace in front of the line.\r\n\r\nI know I can add `&nbsp;` but it's off course way better if I can just use spaces or maybe an excluded symbol like `~` or whatever. \r\n\r\nCould I use an option for that. Or write my own custom method that converts back and forth my special symbol between a `&nbsp;` and a \"whitespace\" in my forms / show?\r\n\r\nThanks."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/616",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/616/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/616/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/616/events",
        "html_url": "https://github.com/vmg/redcarpet/pull/616",
        "id": 230135338,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTIxNjEzNjUz",
        "number": 616,
        "title": "Inconstant List Indentation",
        "user": {
            "login": "progmem",
            "id": 18321934,
            "node_id": "MDQ6VXNlcjE4MzIxOTM0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18321934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/progmem",
            "html_url": "https://github.com/progmem",
            "followers_url": "https://api.github.com/users/progmem/followers",
            "following_url": "https://api.github.com/users/progmem/following{/other_user}",
            "gists_url": "https://api.github.com/users/progmem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/progmem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/progmem/subscriptions",
            "organizations_url": "https://api.github.com/users/progmem/orgs",
            "repos_url": "https://api.github.com/users/progmem/repos",
            "events_url": "https://api.github.com/users/progmem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/progmem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-05-20T06:56:18Z",
        "updated_at": "2017-09-02T17:02:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vmg/redcarpet/pulls/616",
            "html_url": "https://github.com/vmg/redcarpet/pull/616",
            "diff_url": "https://github.com/vmg/redcarpet/pull/616.diff",
            "patch_url": "https://github.com/vmg/redcarpet/pull/616.patch"
        },
        "body": "Pull request for issue #615 \r\n\r\n* Create test to replicate issue #615 \r\n* Correct improper indentation handling by using current indentation to limit scan on later levels"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/615",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/615/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/615/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/615/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/615",
        "id": 219996371,
        "node_id": "MDU6SXNzdWUyMTk5OTYzNzE=",
        "number": 615,
        "title": "Inconstant List Indentation",
        "user": {
            "login": "deckar01",
            "id": 3108007,
            "node_id": "MDQ6VXNlcjMxMDgwMDc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3108007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deckar01",
            "html_url": "https://github.com/deckar01",
            "followers_url": "https://api.github.com/users/deckar01/followers",
            "following_url": "https://api.github.com/users/deckar01/following{/other_user}",
            "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions",
            "organizations_url": "https://api.github.com/users/deckar01/orgs",
            "repos_url": "https://api.github.com/users/deckar01/repos",
            "events_url": "https://api.github.com/users/deckar01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deckar01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 34906437,
                "node_id": "MDU6TGFiZWwzNDkwNjQzNw==",
                "url": "https://api.github.com/repos/vmg/redcarpet/labels/bug",
                "name": "bug",
                "color": "f7c6c7",
                "default": true
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2017-04-06T18:49:41Z",
        "updated_at": "2018-01-04T15:40:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "### Input\r\n\r\n```md\r\n - Item 1\r\n   - Item 2\r\n     - Item 3\r\n       - Item 4\r\n         - Item 5\r\n```\r\n\r\n### Output\r\n\r\n```html\r\n<ul>\r\n    <li>Item 1\r\n        <ul>\r\n            <li>Item 2\r\n                <ul>\r\n                    <li>Item 3</li>\r\n                    <li>Item 4\r\n                        <ul>\r\n                            <li>Item 5</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n```\r\n\r\n![screen shot 2017-04-06 at 1 24 30 pm](https://cloud.githubusercontent.com/assets/3108007/24769514/6eaa9e8c-1acc-11e7-856b-18c1207db4b2.png)\r\n\r\n### Expected Output\r\n\r\nEach bullet with more indentation than the previous bullet should start a child list.\r\n\r\n### References\r\n\r\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/3470"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/614",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/614/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/614/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/614/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/614",
        "id": 219345713,
        "node_id": "MDU6SXNzdWUyMTkzNDU3MTM=",
        "number": 614,
        "title": "Relative links rendered with incorrect directory path",
        "user": {
            "login": "PreciselyAlyss",
            "id": 9373485,
            "node_id": "MDQ6VXNlcjkzNzM0ODU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9373485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PreciselyAlyss",
            "html_url": "https://github.com/PreciselyAlyss",
            "followers_url": "https://api.github.com/users/PreciselyAlyss/followers",
            "following_url": "https://api.github.com/users/PreciselyAlyss/following{/other_user}",
            "gists_url": "https://api.github.com/users/PreciselyAlyss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PreciselyAlyss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PreciselyAlyss/subscriptions",
            "organizations_url": "https://api.github.com/users/PreciselyAlyss/orgs",
            "repos_url": "https://api.github.com/users/PreciselyAlyss/repos",
            "events_url": "https://api.github.com/users/PreciselyAlyss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PreciselyAlyss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2017-04-04T18:44:25Z",
        "updated_at": "2018-04-08T20:24:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "#### Expected behavior\r\n\r\nWhen adding a link with a relative path, I expect it to render display and link to the directory path I indicated. \r\n\r\n`[/v3/orders/{order_id}/transactions](/api/v3/openapi-v3.html#gettransactions/)` should provide `https://domain.com/api/v3/openapi-v3.html#gettransactions`. \r\n\r\n#### Actual behavior\r\n\r\nLinks that contain `.html` instead of a relative directory path strip the part of the url so the link for `[/v3/orders/{order_id}/transactions](/api/v3/openapi-v3.html#gettransactions/)` becomes `https://domain.com/v3/openapi-v3.html#gettransactions`. \r\n\r\n#### Steps to reproduce\r\n\r\nThis above behavior has been seen with [middleman](https://github.com/middleman/middleman) with [Slate](https://github.com/lord/slate). \r\n\r\nAttempts to troubleshoot have included adding a trailing slash and removing it or changing the placement. \r\n\r\n- `[/v3/orders/{order_id}/transactions](/api/v3/openapi-v3.html/#gettransactions)`\r\n- `[/v3/orders/{order_id}/transactions](/api/v3/openapi-v3.html#gettransactions)`\r\n- `[/v3/orders/{order_id}/transactions](/api/v3/openapi-v3.html#gettransactions/)`\r\n\r\nMiddleman config file: \r\n```ruby\r\n# Markdown\r\nset :markdown_engine, :redcarpet\r\nset :markdown,\r\n    fenced_code_blocks: true,\r\n    smartypants: true,\r\n    disable_indented_code_blocks: true,\r\n    prettify: true,\r\n    tables: true,\r\n    with_toc_data: true,\r\n    no_intra_emphasis: true\r\n\r\n# Sitemap\r\npage \"/sitemap.xml\", :layout => false\r\n\r\n# Assets\r\nset :css_dir, 'stylesheets'\r\nset :js_dir, 'javascripts'\r\nset :images_dir, 'images'\r\nset :fonts_dir, 'fonts'\r\n\r\n# Activate the syntax highlighter\r\nactivate :syntax\r\n\r\nactivate :autoprefixer do |config|\r\n  config.browsers = ['last 2 version', 'Firefox ESR']\r\n  config.cascade  = false\r\n  config.inline   = true\r\nend\r\n\r\n# Github pages require relative links\r\nactivate :relative_assets\r\nset :relative_links, true\r\n\r\n# Build Configuration\r\nconfigure :build do\r\n  # If you're having trouble with Middleman hanging, commenting\r\n  # out the following two lines has been known to help\r\n  activate :minify_css\r\n  activate :minify_javascript\r\n  # activate :relative_assets\r\n  # activate :asset_hash\r\n  # activate :gzip\r\nend\r\n\r\nhelpers do\r\n  require './lib/toc_data.rb'\r\nend\r\n```"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/610",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/610/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/610/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/610/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/610",
        "id": 215555362,
        "node_id": "MDU6SXNzdWUyMTU1NTUzNjI=",
        "number": 610,
        "title": "Optional Reference-Style Link Space",
        "user": {
            "login": "deckar01",
            "id": 3108007,
            "node_id": "MDQ6VXNlcjMxMDgwMDc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3108007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deckar01",
            "html_url": "https://github.com/deckar01",
            "followers_url": "https://api.github.com/users/deckar01/followers",
            "following_url": "https://api.github.com/users/deckar01/following{/other_user}",
            "gists_url": "https://api.github.com/users/deckar01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deckar01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deckar01/subscriptions",
            "organizations_url": "https://api.github.com/users/deckar01/orgs",
            "repos_url": "https://api.github.com/users/deckar01/repos",
            "events_url": "https://api.github.com/users/deckar01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deckar01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2017-03-20T21:06:45Z",
        "updated_at": "2017-05-05T14:18:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Markdown allows a space between the square brackets `] [` of a reference style link, but that behavior creates ambiguity and [interference with extensions like task lists](https://github.com/deckar01/task_list/issues/4).\r\n\r\n---\r\n\r\n### Reference\r\n\r\n> You can optionally use a space to separate the sets of brackets:\r\n> \r\n> ```md\r\n> This is [an example] [id] reference-style link.\r\n> ```\r\n>\r\n> http://daringfireball.net/projects/markdown/syntax#link\r\n\r\n---\r\n\r\n### Ambiguity\r\n\r\n```md\r\n[red] [blue]\r\n\r\n[red]: /red\r\n[blue]: /blue\r\n```\r\n\r\nRed Carpet renders this as:\r\n\r\n```html\r\n<a href=\"/blue\">red</a>\r\n```\r\n\r\nbut, other markdown engines (like GitHub Flavored Markdown) have disabled the optional space and render it as:\r\n\r\n```html\r\n<a href=\"/red\">red</a> <a href=\"/blue\">blue</a>\r\n```\r\n\r\n---\r\n\r\n### Interference\r\n\r\n```md\r\n - [ ] [bug] test\r\n - [x] [bug] test\r\n\r\n[bug]: /bug\r\n```\r\n\r\nExtensions like task lists work by filtering list items looking for lines starting with `[ /x/X] `, but Red Carpet will have already transformed them into links:\r\n\r\n```html\r\n<ul>\r\n  <li><a href=\"/bug\"> </a> test</li>\r\n  <li><a href=\"/bug\">x</a> test</li>\r\n</ul>\r\n```\r\n\r\nIf Red Carpet had a way to disable the optional space the ambiguity would be resolved.\r\n\r\n```html\r\n<ul>\r\n  <li>[ ] <a href=\"/bug\">bug</a> test</li>\r\n  <li>[x] <a href=\"/bug\">bug</a> test</li>\r\n</ul>\r\n```\r\n\r\n---\r\n\r\n### Proposal\r\n\r\nAdd an option named `reference_space` that defaults to true, that determines if the optional space is recognized."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/608",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/608/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/608/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/608/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/608",
        "id": 212174079,
        "node_id": "MDU6SXNzdWUyMTIxNzQwNzk=",
        "number": 608,
        "title": "Smartypants converts --> into en dash if comment contains HTML",
        "user": {
            "login": "lord",
            "id": 1976330,
            "node_id": "MDQ6VXNlcjE5NzYzMzA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1976330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lord",
            "html_url": "https://github.com/lord",
            "followers_url": "https://api.github.com/users/lord/followers",
            "following_url": "https://api.github.com/users/lord/following{/other_user}",
            "gists_url": "https://api.github.com/users/lord/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lord/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lord/subscriptions",
            "organizations_url": "https://api.github.com/users/lord/orgs",
            "repos_url": "https://api.github.com/users/lord/repos",
            "events_url": "https://api.github.com/users/lord/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lord/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2017-03-06T16:24:24Z",
        "updated_at": "2017-05-04T22:50:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "@mbuttler found a (slightly esoteric) bug in https://github.com/lord/slate/issues/715, and I think Smartypants might be causing the problem? Here's a minimal example:\r\n\r\n```ruby\r\nrequire \"redcarpet\"\r\nputs Redcarpet::Render::SmartyPants.render(\"Oh SmartyPants, you're so crazy...\")\r\n# output: Oh SmartyPants, you&rsquo;re so crazy&hellip;\r\nputs Redcarpet::Render::SmartyPants.render(\"<!-- Oh SmartyPants, you're so crazy... -->\")\r\n# output: <!-- Oh SmartyPants, you're so crazy... -->\r\nputs Redcarpet::Render::SmartyPants.render(\"<!-- <p>Oh SmartyPants, you're so crazy...</p> -->\")\r\n# output: <!-- <p>Oh SmartyPants, you&rsquo;re so crazy&hellip;</p> &ndash;>\r\n```\r\n\r\nEven though the last example is just one giant HTML comment, it seems like the HTML tags inside put Smartpants back into converting-mode, which makes the enclosing comment never end? Let me know if I can provide any additional information!\r\n\r\n(As an aside, since I'm not sure I've came in here and said it: thanks for the excellent markdown parser, thousands of Slate users have loved and enjoyed the extensive features you support! ❤️ )"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/606",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/606/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/606/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/606/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/606",
        "id": 210795872,
        "node_id": "MDU6SXNzdWUyMTA3OTU4NzI=",
        "number": 606,
        "title": "List Numbering Discrepancy With Github When Bolding Items",
        "user": {
            "login": "chutch1994",
            "id": 7396610,
            "node_id": "MDQ6VXNlcjczOTY2MTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7396610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chutch1994",
            "html_url": "https://github.com/chutch1994",
            "followers_url": "https://api.github.com/users/chutch1994/followers",
            "following_url": "https://api.github.com/users/chutch1994/following{/other_user}",
            "gists_url": "https://api.github.com/users/chutch1994/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chutch1994/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chutch1994/subscriptions",
            "organizations_url": "https://api.github.com/users/chutch1994/orgs",
            "repos_url": "https://api.github.com/users/chutch1994/repos",
            "events_url": "https://api.github.com/users/chutch1994/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chutch1994/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-02-28T14:04:33Z",
        "updated_at": "2017-02-28T14:05:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I just wanted to point out a discrepancy between how Redcarpet and Github handle bolding a line in an ordered list.\r\n\r\nWhenever you enter the following markdown...\r\n\r\n````\r\n**1. first**\r\n\r\n2. Second\r\n\r\n3. Third\r\n````\r\n\r\nAnd try to render it as HTML in Redcarpet, you get the following HTML...\r\n\r\n````\r\n<p>\r\n  <strong>1. First</strong>\r\n  <ol>\r\n    <li>Second</li>\r\n    <li>Third</li>\r\n  </ol>\r\n</p>\r\n````\r\n\r\nThis makes the numbering off in that it would go (1, 1, 2) and not (1, 2, 3).\r\n\r\nHowever, on Github, it starts the numbering at 2 so that the sequence is correct.\r\n\r\n````\r\n<p>\r\n  <strong>1. First</strong>\r\n  <ol start=\"2\">\r\n    <li>Second</li>\r\n    <li>Third</li>\r\n  </ol>\r\n</p>\r\n````\r\n\r\nIt's certainly an edge case, but I just wanted to point it out."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/605",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/605/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/605/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/605/events",
        "html_url": "https://github.com/vmg/redcarpet/pull/605",
        "id": 210701720,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTA4MjY4NTkw",
        "number": 605,
        "title": "Include cell header information in table_cell callback.",
        "user": {
            "login": "mlambley",
            "id": 17264636,
            "node_id": "MDQ6VXNlcjE3MjY0NjM2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17264636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mlambley",
            "html_url": "https://github.com/mlambley",
            "followers_url": "https://api.github.com/users/mlambley/followers",
            "following_url": "https://api.github.com/users/mlambley/following{/other_user}",
            "gists_url": "https://api.github.com/users/mlambley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mlambley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mlambley/subscriptions",
            "organizations_url": "https://api.github.com/users/mlambley/orgs",
            "repos_url": "https://api.github.com/users/mlambley/repos",
            "events_url": "https://api.github.com/users/mlambley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mlambley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-02-28T06:47:23Z",
        "updated_at": "2017-03-01T08:43:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
            "url": "https://api.github.com/repos/vmg/redcarpet/pulls/605",
            "html_url": "https://github.com/vmg/redcarpet/pull/605",
            "diff_url": "https://github.com/vmg/redcarpet/pull/605.diff",
            "patch_url": "https://github.com/vmg/redcarpet/pull/605.patch"
        },
        "body": "Copy flag bitmask logic from html.c to rc_render.c. \r\nPass whether or not the cell is a header (th) to the table_cell callback. \r\nUpdate readme and render_strip to match."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/604",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/604/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/604/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/604/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/604",
        "id": 210641922,
        "node_id": "MDU6SXNzdWUyMTA2NDE5MjI=",
        "number": 604,
        "title": "table_cell callback doesn't pass MKD_TABLE_HEADER",
        "user": {
            "login": "mlambley",
            "id": 17264636,
            "node_id": "MDQ6VXNlcjE3MjY0NjM2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17264636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mlambley",
            "html_url": "https://github.com/mlambley",
            "followers_url": "https://api.github.com/users/mlambley/followers",
            "following_url": "https://api.github.com/users/mlambley/following{/other_user}",
            "gists_url": "https://api.github.com/users/mlambley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mlambley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mlambley/subscriptions",
            "organizations_url": "https://api.github.com/users/mlambley/orgs",
            "repos_url": "https://api.github.com/users/mlambley/repos",
            "events_url": "https://api.github.com/users/mlambley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mlambley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-02-27T23:38:12Z",
        "updated_at": "2017-02-28T06:48:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Forgive my newishness if this is a matter which I've overlooked. This is a snippet of my rb file.\r\n\r\n```\r\nclass HTML < Redcarpet::Render::HTML\r\n  include Rouge::Plugins::Redcarpet\r\n  ...\r\n  def table_row(content)\r\n    \"<tr>\" + content + \"</tr>\"\r\n  end\r\n\r\n  def table_cell(content, alignment)\r\n    #This part doesn't work. Alignment remains nil for both header and body cells.\r\n    if alignment === \"HEADER\"\r\n        \"<th>\" + content + \"</th>\"\r\n    else\r\n        \"<td>\" + content + \"</td>\"\r\n    end\r\n  end\r\n  ...\r\nend\r\n```\r\n\r\nIn html.c in rndr_tablecell there is code \r\n\r\n\tif (flags & MKD_TABLE_HEADER) {\r\n\t\tBUFPUTSL(ob, \"<th\");\r\n\t} else {\r\n\t\tBUFPUTSL(ob, \"<td\");\r\n\t}\r\n\r\nThe flags also contain MKD_TABLE_ALIGN_CENTER, MKD_TABLE_ALIGN__L, and MKD_TABLE_ALIGN__R for cell alignment.\r\n\r\nHowever, the call back function which occurs in rc_render.c in rndr_tablecell only passes CSTR2SYM(\"left\"), CSTR2SYM(\"right\") or CSTR2SYM(\"center\") to BLOCK_CALLBACK(\"table_cell\", ....)\r\n\r\nFrom this, and the fact that alignment remains nil whether it's a header or not, I can only conclude that the table_cell override in the rb file doesn't get told whether or not it's a header.\r\n\r\nCould this information be included in the callback?\r\n\r\nI'm currently going through the C code to see if I can suggest a fix for you."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/601",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/601/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/601/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/601/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/601",
        "id": 205522464,
        "node_id": "MDU6SXNzdWUyMDU1MjI0NjQ=",
        "number": 601,
        "title": "Support for Table Footers",
        "user": {
            "login": "jhabdas",
            "id": 440298,
            "node_id": "MDQ6VXNlcjQ0MDI5OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/440298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhabdas",
            "html_url": "https://github.com/jhabdas",
            "followers_url": "https://api.github.com/users/jhabdas/followers",
            "following_url": "https://api.github.com/users/jhabdas/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhabdas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhabdas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhabdas/subscriptions",
            "organizations_url": "https://api.github.com/users/jhabdas/orgs",
            "repos_url": "https://api.github.com/users/jhabdas/repos",
            "events_url": "https://api.github.com/users/jhabdas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhabdas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-02-06T09:01:48Z",
        "updated_at": "2017-02-06T09:05:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "I realize I could simply use HTML, but I'm curious if there has been any consideration for the support of table footers. Perhaps something like:\r\n\r\n```markdown\r\n| Expense             | Bridgeport, Chicago | Denpasar, Bali      |\r\n| :------------------ | :------------------ | :------------------ |\r\n| Rent                | $650/mo.            | $216/mo.            |\r\n| Utilities           | $100/mo.            | Included with rent  |\r\n| Cable/Internet      | $60/mo.             | Included with rent  |\r\n| Vehicle[^1]         | $405/mo.            | $55/mo.             |\r\n| Gasoline            | $100/mo.            | $8/mo.              |\r\n| Cellphone/LTE       | $90/mo.             | $15/mo.             |\r\n| Drop-off laundering | $10 + tip per load  | $1.90 per load      |\r\n| Cigarettes          | $12 per pack        | $1.80 per pack      |\r\n| Regular coffee      | $1 per cup          | $0.45 per cup       |\r\n| Water               | Free                | $1.50 per 12 liters |\r\n| \"Visa runs\"         | N/A                 | $165 bi-monthly     |\r\n| :------------------ | :------------------ | :------------------ |\r\n|                     | $1,428.00           | $382.15             |\r\n```"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/600",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/600/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/600/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/600/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/600",
        "id": 202654109,
        "node_id": "MDU6SXNzdWUyMDI2NTQxMDk=",
        "number": 600,
        "title": "incorrect code block rendering",
        "user": {
            "login": "iperry",
            "id": 224968,
            "node_id": "MDQ6VXNlcjIyNDk2OA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/224968?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iperry",
            "html_url": "https://github.com/iperry",
            "followers_url": "https://api.github.com/users/iperry/followers",
            "following_url": "https://api.github.com/users/iperry/following{/other_user}",
            "gists_url": "https://api.github.com/users/iperry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iperry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iperry/subscriptions",
            "organizations_url": "https://api.github.com/users/iperry/orgs",
            "repos_url": "https://api.github.com/users/iperry/repos",
            "events_url": "https://api.github.com/users/iperry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iperry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-01-23T21:21:26Z",
        "updated_at": "2017-01-23T21:21:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Sample here:\r\nhttps://gist.github.com/iperry/f880921f916afa6efdc889892f74d3fe\r\n\r\nA numbered list followed immediately by a code block seems to render the block as an inline block instead of a fenced block.\r\n\r\nAdding line breaks into the block results in correct rendering.\r\n\r\nAdding a line break after the line also results in correct rendering."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/599",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/599/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/599/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/599/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/599",
        "id": 200794263,
        "node_id": "MDU6SXNzdWUyMDA3OTQyNjM=",
        "number": 599,
        "title": "Duplicated <a> tags when autolinks set to true",
        "user": {
            "login": "wilgoszpl",
            "id": 4175660,
            "node_id": "MDQ6VXNlcjQxNzU2NjA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4175660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wilgoszpl",
            "html_url": "https://github.com/wilgoszpl",
            "followers_url": "https://api.github.com/users/wilgoszpl/followers",
            "following_url": "https://api.github.com/users/wilgoszpl/following{/other_user}",
            "gists_url": "https://api.github.com/users/wilgoszpl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wilgoszpl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wilgoszpl/subscriptions",
            "organizations_url": "https://api.github.com/users/wilgoszpl/orgs",
            "repos_url": "https://api.github.com/users/wilgoszpl/repos",
            "events_url": "https://api.github.com/users/wilgoszpl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wilgoszpl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 34906437,
                "node_id": "MDU6TGFiZWwzNDkwNjQzNw==",
                "url": "https://api.github.com/repos/vmg/redcarpet/labels/bug",
                "name": "bug",
                "color": "f7c6c7",
                "default": true
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-01-14T10:01:36Z",
        "updated_at": "2017-01-14T18:29:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "When you have `:autolink` set to `true`, when you provide raw `<a>` html tag, it is wrapped but should be ignored. This means, as a result we get:\r\n\r\n    <p>Sample content <a href=\\\"http://frontendflow.com\\\"><a href=\"http://frontendflow.com\">http://frontendflow.com</a></a></p>"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/593",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/593/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/593/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/593/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/593",
        "id": 198166087,
        "node_id": "MDU6SXNzdWUxOTgxNjYwODc=",
        "number": 593,
        "title": "<hr> getting wrapped in <p> tags",
        "user": {
            "login": "benhutton",
            "id": 61645,
            "node_id": "MDQ6VXNlcjYxNjQ1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/61645?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benhutton",
            "html_url": "https://github.com/benhutton",
            "followers_url": "https://api.github.com/users/benhutton/followers",
            "following_url": "https://api.github.com/users/benhutton/following{/other_user}",
            "gists_url": "https://api.github.com/users/benhutton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benhutton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benhutton/subscriptions",
            "organizations_url": "https://api.github.com/users/benhutton/orgs",
            "repos_url": "https://api.github.com/users/benhutton/repos",
            "events_url": "https://api.github.com/users/benhutton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benhutton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2016-12-30T16:21:59Z",
        "updated_at": "2016-12-30T16:33:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "```\r\n> Redcarpet::Markdown.new(Redcarpet::Render::HTML).render(\"<hr>\")\r\n => \"<p><hr></p>\\n\" \r\n\r\n> Redcarpet::Markdown.new(Redcarpet::Render::HTML).render(\"<hr></hr>\")\r\n => \"<hr></hr>\\n\" \r\n\r\n> Redcarpet::Markdown.new(Redcarpet::Render::HTML).render(\"<hr />\")                                                                                                                 \r\n => \"<p><hr /></p>\\n\" \r\n\r\n> Redcarpet::Markdown.new(Redcarpet::Render::HTML).render(\"<hr/>\")                                                                                                                  \r\n => \"<hr/>\\n\" \r\n```\r\n\r\nThe second and fourth examples above work as I would expect. The first and third do not. Best I can tell, they are also valid ways to write an `hr` tag: http://www.w3schools.com/tags/tag_hr.asp\r\n\r\nThe first (`<hr>`) is the proper way to write it in html5 (https://www.w3.org/TR/html5/grouping-content.html#the-hr-element)."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/592",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/592/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/592/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/592/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/592",
        "id": 198141192,
        "node_id": "MDU6SXNzdWUxOTgxNDExOTI=",
        "number": 592,
        "title": "Allow arbitrary info strings in fenced code blocks",
        "user": {
            "login": "szeiger",
            "id": 54262,
            "node_id": "MDQ6VXNlcjU0MjYy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/54262?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/szeiger",
            "html_url": "https://github.com/szeiger",
            "followers_url": "https://api.github.com/users/szeiger/followers",
            "following_url": "https://api.github.com/users/szeiger/following{/other_user}",
            "gists_url": "https://api.github.com/users/szeiger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/szeiger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/szeiger/subscriptions",
            "organizations_url": "https://api.github.com/users/szeiger/orgs",
            "repos_url": "https://api.github.com/users/szeiger/repos",
            "events_url": "https://api.github.com/users/szeiger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/szeiger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-12-30T12:20:01Z",
        "updated_at": "2016-12-30T12:20:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "This is related to https://github.com/vmg/redcarpet/issues/187 but it's a problem with the parser, not the renderer. According to the [CommonMark spec](http://spec.commonmark.org/0.27/#fenced-code-blocks) the only restriction on info strings is that they must not contain backtick characters.\r\n\r\nIn github's rendering of https://github.com/szeiger/ornate/blob/afd538c599a0e6bb767ac61625ce08f2121f91fd/doc/src/markdown.md all blocks with non-trivial info strings are messed up, the same goes for nested blocks, which may be the same or a different problem.\r\n\r\n(I hope this is the right place to file this issue. According to https://github.com/github/markup README files are parsed with redcarpet. Note that when pasting the offending Markdown content into a github issue and clicking \"Preview\", it is parsed correctly.)"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/590",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/590/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/590/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/590/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/590",
        "id": 194764028,
        "node_id": "MDU6SXNzdWUxOTQ3NjQwMjg=",
        "number": 590,
        "title": "some tables rendered in incorrect way",
        "user": {
            "login": "nvoynov",
            "id": 103741,
            "node_id": "MDQ6VXNlcjEwMzc0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/103741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nvoynov",
            "html_url": "https://github.com/nvoynov",
            "followers_url": "https://api.github.com/users/nvoynov/followers",
            "following_url": "https://api.github.com/users/nvoynov/following{/other_user}",
            "gists_url": "https://api.github.com/users/nvoynov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nvoynov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nvoynov/subscriptions",
            "organizations_url": "https://api.github.com/users/nvoynov/orgs",
            "repos_url": "https://api.github.com/users/nvoynov/repos",
            "events_url": "https://api.github.com/users/nvoynov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nvoynov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-12-10T12:16:14Z",
        "updated_at": "2016-12-10T12:51:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hi,\r\n\r\nI have a problem with some tables but I can't understand it is RedCarpet bug or not. You can see attached file [core.req.txt](https://github.com/vmg/redcarpet/files/643725/core.req.txt) that have few tables and incorrect rendering. The first table renders as correct table, the second doesn't.\r\n\r\nI use followed options `{ autolink: true, tables: true, with_toc_data: true, fenced_code_blocks: true }`\r\n\r\nBefore I started [my own simple server](https://github.com/nvoynov/minireq-site) to serve my markdown documents, I used gitbook and didn't have any issues with tables."
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/582",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/582/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/582/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/582/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/582",
        "id": 182501633,
        "node_id": "MDU6SXNzdWUxODI1MDE2MzM=",
        "number": 582,
        "title": "New lines cause parsing errors",
        "user": {
            "login": "olivierlacan",
            "id": 65950,
            "node_id": "MDQ6VXNlcjY1OTUw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/65950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olivierlacan",
            "html_url": "https://github.com/olivierlacan",
            "followers_url": "https://api.github.com/users/olivierlacan/followers",
            "following_url": "https://api.github.com/users/olivierlacan/following{/other_user}",
            "gists_url": "https://api.github.com/users/olivierlacan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olivierlacan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olivierlacan/subscriptions",
            "organizations_url": "https://api.github.com/users/olivierlacan/orgs",
            "repos_url": "https://api.github.com/users/olivierlacan/repos",
            "events_url": "https://api.github.com/users/olivierlacan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olivierlacan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2016-10-12T11:28:35Z",
        "updated_at": "2017-03-02T00:25:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "This is a particularly weird bug. I've reproduced it using 3.3.4 under Ruby 2.2.5.\n\n`````` ruby\ndef markdown_extensions\n  {\n    autolink: true, # turn any URL into a link\n    space_after_headers: true, # so #Title won't work, # Title will\n    no_intra_emphasis: true, # foo_bar_baz will not generate <em> tags\n    fenced_code_blocks: true, # ``` to start & end code blocks, ```ruby works\n    tables: true, # parse Markdown tables, the best thing ever\n    disable_indented_code_blocks: true, # use triple ```\n    footnotes: true\n  }\nend\n\ndef parser\n  Redcarpet::Markdown.new(Redcarpet::Render::HTML.new, markdown_extensions)\nend\n\ns1 = \"# header 1 ## header 2\\n - item 1\\n - item 2\"\ns2 = \"# header 1 \\n ## header 2\\n - item 1\\n - item 2\"\n\nparser.render s1\n=> \"<h1>header 1 ## header 2</h1>\\n\\n<ul>\\n<li>item 1</li>\\n<li>item 2</li>\\n</ul>\\n\"\n\nparser.render s2\n=> \"<h1>header 1</h1>\\n\\n<p>## header 2\\n - item 1\\n - item 2</p>\\n\"\n``````\n"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/570",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/570/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/570/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/570/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/570",
        "id": 169779150,
        "node_id": "MDU6SXNzdWUxNjk3NzkxNTA=",
        "number": 570,
        "title": "Assertion failed: `(md->work_bufs[BUFFER_SPAN].size == 0)` - Thread safety related?",
        "user": {
            "login": "boazsegev",
            "id": 870622,
            "node_id": "MDQ6VXNlcjg3MDYyMg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/870622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boazsegev",
            "html_url": "https://github.com/boazsegev",
            "followers_url": "https://api.github.com/users/boazsegev/followers",
            "following_url": "https://api.github.com/users/boazsegev/following{/other_user}",
            "gists_url": "https://api.github.com/users/boazsegev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boazsegev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boazsegev/subscriptions",
            "organizations_url": "https://api.github.com/users/boazsegev/orgs",
            "repos_url": "https://api.github.com/users/boazsegev/repos",
            "events_url": "https://api.github.com/users/boazsegev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boazsegev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-08-07T04:24:01Z",
        "updated_at": "2016-08-07T04:24:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "First off, thanks for an amazing gem!\n\nI did come across a glitch... I think.\n\nI was testing the rendering system under high stress.\n\nI ran the system in multi threaded mode (running on 16 threads).\n\nWhile testing, I disabled my own [cache management](https://github.com/boazsegev/plezi/blob/890694ffe725eea99c4ca192e821455025012031/lib/plezi/render/markdown.rb#L53) to stress test the rendering engine (rather then the caching system which was storing the rendered string).\n\nI repeatedly asked for the same file to be rendered. 12 threads were doing the asking, 16 threads were doing the rendering, it was all running through Iodine's async IO using HTTP requests, about 200 concurrent requests at a time.\n\nEvery time I ran the test, my server would crash with the error:\n\n> Assertion failed: (md->work_bufs[BUFFER_SPAN].size == 0), function sd_markdown_render, file markdown.c, line 2898\n\nI'm not complaining about the server crashing, I think it's the right thing to do when experiencing data corruption, but I am worried about the underline cause and the risk of production time failures.\n\nI'm assuming this is multi-threading related, since I didn't get the error in single thread mode.\n\nThe following is just my guess (my 2¢) and I hope this helps track down the issue:\n\nAt first look, the C code doesn't seem to exit the Global VM Lock, so I thought I might be wrong, however, after a quick read through the code (that's a lot of code and very nicely written, wow), I think the issue is with the markdown struct storing stateful rendering data.\n\nI believe that `md->refs` and `md->work_bufs` are susceptible to corruption. It also seems to me that these could be separated from the markdown engine into a separate \"state struct\", so that multi-threaded rendering with the same markdown render engine wouldn't cause data corruption.\n\nI'm thankful for your time and hope for a fix or a workaround.\n"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/545",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/545/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/545/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/545/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/545",
        "id": 134083857,
        "node_id": "MDU6SXNzdWUxMzQwODM4NTc=",
        "number": 545,
        "title": "Links bounded with angle brackets get doubly linkified",
        "user": {
            "login": "ebrynne",
            "id": 733968,
            "node_id": "MDQ6VXNlcjczMzk2OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/733968?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ebrynne",
            "html_url": "https://github.com/ebrynne",
            "followers_url": "https://api.github.com/users/ebrynne/followers",
            "following_url": "https://api.github.com/users/ebrynne/following{/other_user}",
            "gists_url": "https://api.github.com/users/ebrynne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ebrynne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ebrynne/subscriptions",
            "organizations_url": "https://api.github.com/users/ebrynne/orgs",
            "repos_url": "https://api.github.com/users/ebrynne/repos",
            "events_url": "https://api.github.com/users/ebrynne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ebrynne/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-02-16T20:05:28Z",
        "updated_at": "2016-02-17T18:43:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Hello!\n\nWhen a link is specified with angle brackets around a URL as the link text, the link gets doubly linkified and the real target becomes that of the description, rather than the markdown-specified target.\n\n``` ruby\nrequire 'redcarpet'\nrenderer = Redcarpet::Render::HTML.new()\nmarkdown = Redcarpet::Markdown.new(renderer, {})\nputs markdown.render('[<http://test.com/>](https://google.com)')\n<p><a href=\"https://google.com\"><a href=\"http://test.com/\">http://test.com/</a></a></p>\n```\n\nThe two nested `<a>` tags result take the user to `test.com` when they click on the linked text. \n\nIt looks like this is happening because it's autolinking `<http://test.com/>` after generating the initial link.\n\nAm I correct in assuming this is undesirable behaviour? Let me know if there's anything I can help with!\n"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/544",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/544/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/544/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/544/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/544",
        "id": 132250906,
        "node_id": "MDU6SXNzdWUxMzIyNTA5MDY=",
        "number": 544,
        "title": "Comments in Unordered Lists",
        "user": {
            "login": "cskeeters",
            "id": 2642266,
            "node_id": "MDQ6VXNlcjI2NDIyNjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2642266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cskeeters",
            "html_url": "https://github.com/cskeeters",
            "followers_url": "https://api.github.com/users/cskeeters/followers",
            "following_url": "https://api.github.com/users/cskeeters/following{/other_user}",
            "gists_url": "https://api.github.com/users/cskeeters/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cskeeters/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cskeeters/subscriptions",
            "organizations_url": "https://api.github.com/users/cskeeters/orgs",
            "repos_url": "https://api.github.com/users/cskeeters/repos",
            "events_url": "https://api.github.com/users/cskeeters/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cskeeters/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 34906437,
                "node_id": "MDU6TGFiZWwzNDkwNjQzNw==",
                "url": "https://api.github.com/repos/vmg/redcarpet/labels/bug",
                "name": "bug",
                "color": "f7c6c7",
                "default": true
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-02-08T20:39:19Z",
        "updated_at": "2016-09-21T06:54:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "Sometimes I want to comment out a bullet without removing from the source\n\n```\n* Bullet #1\n<!-- * Bullet #2 -->\n* Bullet #3\n```\n\nThis results in \n- Bullet #1 <!-- Bullet #2 -->\n- Bullet #3\n\nWhy are the comments rendered when in an unordered list and not when they are their own paragraph?\n"
    },
    {
        "url": "https://api.github.com/repos/vmg/redcarpet/issues/542",
        "repository_url": "https://api.github.com/repos/vmg/redcarpet",
        "labels_url": "https://api.github.com/repos/vmg/redcarpet/issues/542/labels{/name}",
        "comments_url": "https://api.github.com/repos/vmg/redcarpet/issues/542/comments",
        "events_url": "https://api.github.com/repos/vmg/redcarpet/issues/542/events",
        "html_url": "https://github.com/vmg/redcarpet/issues/542",
        "id": 130049647,
        "node_id": "MDU6SXNzdWUxMzAwNDk2NDc=",
        "number": 542,
        "title": "Empty string title breaks reference style link",
        "user": {
            "login": "justmytwospence",
            "id": 2817686,
            "node_id": "MDQ6VXNlcjI4MTc2ODY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2817686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justmytwospence",
            "html_url": "https://github.com/justmytwospence",
            "followers_url": "https://api.github.com/users/justmytwospence/followers",
            "following_url": "https://api.github.com/users/justmytwospence/following{/other_user}",
            "gists_url": "https://api.github.com/users/justmytwospence/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justmytwospence/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justmytwospence/subscriptions",
            "organizations_url": "https://api.github.com/users/justmytwospence/orgs",
            "repos_url": "https://api.github.com/users/justmytwospence/repos",
            "events_url": "https://api.github.com/users/justmytwospence/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justmytwospence/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-01-30T23:13:17Z",
        "updated_at": "2016-02-13T22:15:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "```\n# works right:\n[Google]: https://google.com/ \"This is a link to Google\"\n\n# broken:\n[Google]: https://google.com/ \"\"\n```\n\nThe reason this is an issue is that some programs (Emacs' markdown-mode in this case) auto generate reference links with empty strings like this if they aren't explicitly given a title. I debated making an issue for markdown-mode or making an issue here, but it seems like this is an edge case that should not break the rendering of the markdown, regardless.\n"
    }
]